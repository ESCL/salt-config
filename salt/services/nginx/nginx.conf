user www-data;
worker_processes 2;
pid /run/nginx.pid;

events {
    worker_connections 768;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # server_tokens off;
    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # nginx-naxsi config
    ##
    # Uncomment it if you installed nginx-naxsi
    ##

    #include /etc/nginx/naxsi_core.rules;

    ##
    # nginx-passenger config
    ##
    # Uncomment it if you installed nginx-passenger
    ##

    #passenger_root /usr;
    #passenger_ruby /usr/bin/ruby;

    ##
    # Virtual Host Configs
    ##
    server {
        listen {{ pillar['app']['ports']['downstream'] }} default_server;
        listen [::]:{{ pillar['app']['ports']['downstream'] }} default_server ipv6only=on;

        # Make site accessible from http://localhost/
        server_name localhost;

        # Status check for ELB
        location /status {
            access_log off;
            return 200;
        }

        # Static media location, serve directly
        location /static {
            autoindex on;
            alias {{ pillar['auth']['home'] }}/{{ pillar['app']['static_root'] }};
        }

        # Main application location, proxy to app server
        location / {
            {% if pillar['app']['safe_protocol'] %}
            # App requires safe protocol, forwards all http traffic to https
            if ($http_x_forwarded_proto != "https") {
                rewrite ^(.*)$ https://$host$request_uri?;
            }
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";
            {% endif %}

            # Set proxy headers
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_next_upstream error;

            # Proxy to uwsgi app servers
            uwsgi_pass 127.0.0.1:{{ pillar['app']['ports']['upstream'] }};
            include uwsgi_params;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
